{"version":3,"sources":["Componentes/Styles.js","ico/profile.svg","Componentes/VerDatos.js","formulario.js","index.js"],"names":["GlabalStyle","createGlobalStyle","Form","styled","h1","form","Label","label","Span","span","Input","input","Textarea","button","textarea","InputButton","section","SectionVer","VerDatos","props","className","src","profile","alt","datos","nombre","email","telefono","mensaje","Formulario","useState","valor","ver","formulario","setFormulario","initialValues","validate","valores","errores","test","onSubmit","resetForm","console","log","setTimeout","values","errors","touched","handleSubmit","handleChange","handleBlur","type","name","id","placeholder","autocomplete","required","value","onChange","onBlur","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c29f89f1.chunk.js","sourcesContent":["\r\nimport styled, {\r\n    css,\r\n    keyframes,\r\n    ThemeProvider,\r\n    createGlobalStyle,\r\n} from \"styled-components\";\r\n\r\nexport const GlabalStyle = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: 'Cairo', sans-serif;\r\n    }\r\n\r\n    body {\r\n        /* background-color: #E4E4E4; */\r\n        background-repeat: no-repeat;\r\n        height: 100vh;\r\n        background-color: #d5dbed;\r\n    }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    width: 100%;\r\n\r\n    text-align: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    width: 50%;\r\n    height: 100vh;\r\n    background-color: #383349;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    border-radius: 0px;\r\n    box-shadow: 5px 5px 15px 0px #403b4a;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* background-color: red;  */\r\n    width: 80%;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    /* color: #fff; */\r\n    color: #BBB2CD;\r\n    font-weight: 600;\r\n    font-size: 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border-radius: 2px;\r\n    border-top: 0;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    border-bottom: 2px solid #BBB2CD;\r\n    transition: 1s;\r\n    background-color: #E5686800;\r\n    color: #fff;\r\n    outline: none;\r\n    &:focus {\r\n        background-color: #67538C;\r\n        border-bottom: 2px solid #fff;\r\n    }\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n    outline: none;\r\n    resize: none;\r\n    border: 1px solid #fff;\r\n    height: auto;\r\n    border-radius: 2px;\r\n    border-top: 0;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    border-bottom: 2px solid #BBB2CD;\r\n    transition: 1s;\r\n    background-color: #E5686800;\r\n    color: #fff;\r\n    outline: none;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n    background-color: #FACFCF;\r\n    height: 50px;\r\n    width: 50%;\r\n    display: inline-block;\r\n`;\r\n\r\nexport const InputButton = styled(Input)`\r\n    border: 2px solid #BBB2CD;\r\n    font-size: 15px;\r\n    padding: 8px 16px;\r\n    margin-top: 20px;\r\n    transition: .1s;\r\n    &:focus {\r\n        background-color: #67538C00;\r\n        border-bottom: 2px solid #fff;\r\n    }\r\n    &:active {\r\n        background-color: #67538C;\r\n    }\r\n`;\r\n\r\n\r\n// Estilos para ver los datos\r\n\r\nexport const SectionVer = styled.section`\r\n    height: 100vh;\r\n    width: 50%;\r\n    background-color: #fff0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n\r\n    \r\n\r\n    article {\r\n        height: 400px;\r\n        width: 90%;\r\n        background-color: #fff;\r\n        border-radius: 5px;\r\n        box-shadow: 5px 5px 30px 5px #B0B9D5;\r\n        section {\r\n            font-weight: 600;\r\n            height: 30px;\r\n            width: 100%;\r\n            background-color: blue;\r\n            color: #fff;\r\n            border-radius: 5px 5px 0 0 ;\r\n        }\r\n        .contenedor {\r\n            margin: 0 8px;\r\n            background-color: #fff0;\r\n            display: flex;\r\n            img {\r\n                width: 90px;\r\n            }\r\n            div {\r\n                background-color: #BBC1D600;\r\n                width: 100%;\r\n                h2 {\r\n                    font-weight: 600;\r\n                    font-size: 15px;\r\n                    width: 100%;\r\n                    border-bottom: 3px solid #646E90;\r\n                }\r\n            }\r\n        }\r\n\r\n        p {\r\n            height: 250px;\r\n            margin: 0 8px;\r\n            background-color: #BBC1D600;\r\n        }\r\n\r\n        .raya {\r\n            height: 3px;\r\n            width: 100%;\r\n            background-color: #646E90;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const H1 = styled.h1`\r\n//     height: 50px;\r\n//     width: 50px;\r\n//     background-color: red;\r\n// `;\r\n\r\n// export const H2 = styled.h2`\r\n//     height: 50px;\r\n//     width: 50px;\r\n//     background-color: blue;\r\n// `;\r\n","export default __webpack_public_path__ + \"static/media/profile.15422c43.svg\";","import React from \"react\";\r\nimport { SectionVer } from './Styles';\r\n\r\nimport profile from '../ico/profile.svg';\r\n\r\nfunction VerDatos(props) {\r\n\r\n\r\n    \r\n  \r\n    return (\r\n      <>\r\n        <SectionVer>\r\n            <article>\r\n                <section>New Correo</section>\r\n                <div className=\"contenedor\">\r\n                    <img src={profile} alt=\"profile\"></img>\r\n                    <div>\r\n                        <h2>Nombre: {props.datos.nombre}</h2>\r\n                        <h2>Email: {props.datos.email}</h2>\r\n                        <h2>Telefono: {props.datos.telefono}</h2>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n                <p>{props.datos.mensaje}</p>\r\n\r\n                <div className=\"raya\"></div>\r\n                \r\n            </article>\r\n        </SectionVer>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default VerDatos;\r\n  ","import React, {useState} from 'react';\nimport { Formik } from 'formik';\nimport Ver from './Componentes/VerDatos';\n\nimport { Form, \n        Label, \n        Span, \n        Input, \n        Button, \n        H1, \n        Textarea, \n        Section, \n        InputButton } from './Componentes/Styles'; \n\nconst Formulario = () => {\n\n  const [ formulario, setFormulario ] = useState({\n    valor: false,\n    ver: {nombre: '',\n    email: '',\n    telefono: '',\n    mensaje: ''}\n  });\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          nombre: '',\n          email: '',\n          telefono: '',\n          mensaje: ''\n        }}\n        validate={(valores) => {\n          let errores = {};\n          setFormulario({\n            valor: formulario.valor,\n            ver: {...valores}\n          })\n          if(!valores.nombre) {\n            errores.nombre = 'Por fovor ingresa un nombre'\n          } else if( !/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre) ) {\n            errores.nombre = 'El nombre solo puede contener letras y espacios'\n          }\n\n          if(!valores.email) {\n            errores.email = 'Por fovor ingresa un correo'\n          } else if( !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.email) ) {\n            errores.email = 'El correo solo puede contener letras, numeros, puntos, guiones y guion bajo.'\n          }\n\n\n          if(!valores.telefono) {\n            errores.telefono = 'Por favor ingresa un numero de telefono'\n          } else if( !/\\d*[0-9]/.test(valores.telefono) ) {\n            errores.telefono = 'El numero solo puede contener numeros sin espacios.'\n          }\n\n          return errores\n        }}\n        onSubmit={(valores, { resetForm }) =>{\n          resetForm();\n          console.log('Formulario enviado');\n          setFormulario({\n            valor: true,\n            ver: {}\n          })\n          setTimeout(() => setFormulario({\n            valor: false,\n            ver: {}\n          }), 500);\n        }}\n      >\n        \n        {( {values, errors, touched, handleSubmit, handleChange, handleBlur} ) => (\n          <Form onSubmit={ handleSubmit }>\n\n          <Label>\n            <Span>Nombre</Span>\n            <Input \n              type=\"text\" \n              name=\"nombre\" \n              id=\"nombre\" \n              placeholder=\"nombre\" \n              autocomplete=\"name\" \n              required=\"\" \n              value={ values.nombre } \n              onChange={ handleChange }\n              onBlur={ handleBlur }\n              \n              ></Input>\n              { touched.nombre && errors.nombre && <div>{ errors.nombre }</div> }\n          </Label>\n\n          <Label>\n            <Span>Email</Span>\n            <Input \n              type=\"email\" \n              name=\"email\" \n              id=\"email\" \n              placeholder=\"email\" \n              autocomplete=\"email\" \n              required=\"\" \n              value={ values.email } \n              onChange={ handleChange }\n              onBlur={ handleBlur }\n              \n              ></Input>\n              { touched.email && errors.email && <div>{ errors.email }</div> }\n          </Label>\n          <Label>\n            <Span>Telefono</Span>\n            <Input \n              type=\"number\" \n              name=\"telefono\" \n              id=\"telefono\" \n              placeholder=\"telefono\" \n              autocomplete=\"tel\" \n              required=\"\" \n              value={ values.telefono } \n              onChange={ handleChange }\n              onBlur={ handleBlur }\n              \n              ></Input>\n              { touched.telefono && errors.telefono && <div>{ errors.telefono }</div> }\n          </Label>\n\n          <Label>\n            <Span>Mensaje</Span>\n            <Textarea \n              id=\"mensaje\" \n              name=\"mensaje\" \n              placeholder=\"Escribe tu mensaje aquí...\" \n              value={ values.mensaje } \n              onChange={ handleChange }\n              onBlur={ handleBlur }\n              \n              ></Textarea>\n              { touched.email && errors.email && <div>{ errors.email }</div> }\n          </Label>\n          \n          <InputButton type=\"submit\"></InputButton>\n          { formulario.valor && <div>ENVIADO!</div> }\n          </Form> \n        )}\n        \n        \n\n      </Formik>\n      <Ver datos={formulario.ver}>hola</Ver>\n    </>\n  );\n}\n\n\n\nexport default Formulario;\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Fragment, useState} from \"react\";\n// import Ver from './Componentes/VerDatos';\n\n// import { Form, \n//         Label, \n//         Span, \n//         Input, \n//         Button, \n//         H1, \n//         Textarea, \n//         Section, \n//         InputButton } from './Componentes/Styles'; \n\n\n\n// function App() {\n\n//   const [datos, setDatos] = useState({\n//     nombre: \"\",\n//     email: \"\",\n//     telefono: \"\",\n//     mensaje: \"\"\n//   })\n  \n//   const handleInputChange = (e) => {\n//       console.log(e.target.value)\n//       setDatos({\n//         ...datos,\n//         [e.target.name] : e.target.value\n//       })\n//   }\n  \n//   const enviarDatos = (e) => {\n//       e.preventDefault();\n      \n//   }\n  \n\n//   return (\n//     <>\n//     <Form action=\"\" onSubmit={enviarDatos}>\n//       <Label>\n//         <Span>Nombre</Span>\n//         <Input type=\"text\" name=\"nombre\" id=\"nombre\" placeholder=\"nombre\" autocomplete=\"name\" required=\"\" onChange={handleInputChange}></Input>\n//       </Label>\n\n//       <Label>\n//         <Span>Email</Span>\n//         <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" autocomplete=\"email\" required=\"\" onChange={handleInputChange}></Input>\n//       </Label>\n//       <Label>\n//         <Span>Telefono</Span>\n//         <Input type=\"number\" name=\"telefono\" id=\"telefono\" placeholder=\"telefono\" autocomplete=\"tel\" required=\"\" onChange={handleInputChange}></Input>\n//       </Label>\n//       <Label>\n//         <Span>Mensaje</Span>\n//         <Textarea id=\"mensaje\" name=\"mensaje\" placeholder=\"Escribe tu mensaje aquí...\" onChange={handleInputChange}></Textarea>\n//       </Label>\n//       <InputButton type=\"submit\"></InputButton>\n//     </Form>\n\n//     <Ver datos={datos}></Ver>\n//     </>\n//   );\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlabalStyle } from './Componentes/Styles';\n\nimport App from './formulario';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlabalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}